{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAACS,GAAD,OAAQP,GAAR,mBAAsBO,OACrCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEiCC,UAAUH,GAF3C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIAA,EAAKC,OAJL,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QAVrB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IACnC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,+BAAKA,EAAL,OCDCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDbyBK,CAAa1B,GAAhCa,EAHsB,EAG3BN,KAAYa,EAHe,EAGfA,QAEpB,OACI,oCACI,4BAAKpB,GAEHoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,+CACVH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACND,UEWbkB,EA3BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAKvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BAEQ4C,EAAWpB,KAAK,SAAAqB,GAAG,OACf,kBAAC,EAAD,CACI9B,SAAU8B,EACVH,IAAKG,U,MCjBjCC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d5000e6a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories( (c) => [inputValue,...c] );\r\n            setInputValue('');\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            \r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n\r\n}\r\n","\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=uIoYSLwW5AGLiCOSvVkGwXKmiKpohNea`;\r\n    const resp = await fetch( url );\r\n    const {data}=await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={title} />\r\n            <p> {title} </p>   \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import React, { useState, useEffect } from 'react'// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    // const [images, setImages] = useState([]);\r\n    const { data:images,loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            \r\n            <div className=\"card-grid animate__animated animate__fadeIn\">\r\n                {images.map( img => (\r\n                    <GifGridItem \r\n                        key={ img.id }   \r\n                        {...img} \r\n                    />)\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    //const [categories, setCategories] = useState([<li>asdasd</li>,<li>asdasd</li>,<li>asdasd</li>]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>  \r\n            <AddCategory setCategories={setCategories} />           \r\n            <hr/>\r\n\r\n            \r\n\r\n            <ol>\r\n                { \r\n                    categories.map( cat =>\r\n                        <GifGrid \r\n                            category={cat} \r\n                            key={cat}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport GifExpertApp from './GifExpertApp';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n\r\n);\r\n\r\n"],"sourceRoot":""}